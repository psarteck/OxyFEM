#include <cstdio>
#include <iostream>
#include <system_error>
#include <vector>


// void assmat(int& I, int& J, float& X, std::vector<int>& ADPRCL, std::vector<int>&NUMCOL, std::vector<int>& ADSUCL, int& NEXTAD);


void assmat(int I, int J, float X, std::vector<int>& ADPRCL, std::vector<int>&NUMCOL, std::vector<int>& ADSUCL, int& NEXTAD, std::vector<float>& LMATRI) {


    if(I <= J){
        std::cerr << "La procedure AssMat n'est utilisee que pour l'assemblage de la partie triangulaire stricte. Vous etes sur le coefficient (" << I << "," << J << ")" << std::endl;
        std::exit(EXIT_FAILURE);
    }

    int IAD = ADPRCL[I-1];

    if (IAD > 0){

        while (NUMCOL[IAD] != J) {
            int NXT = ADSUCL[IAD];
            if (NXT <= 0){
                break;
            }
            IAD = NXT;
        }

        if (NUMCOL[IAD] == J){
            LMATRI[IAD] += X;
            return;
        }

        ADSUCL[IAD] = NEXTAD;
    }
    else {
        ADPRCL[I] = NEXTAD;
    }

    NUMCOL[NEXTAD] = J;
    LMATRI[NEXTAD] = X;
    ADSUCL[NEXTAD] = 0;

    NEXTAD ++;


}

int main(){

    std::vector<int> ADPRCL(3, 2);

    std::vector<int> NUMCOL(3, 2);

    std::vector<int> ADSUCL(3,5);
    
    int NEXTAD = -1;

    std::vector<float> LMATRI(3, 6.5);



    assmat(2, 1, 0.5, ADPRCL, NUMCOL, ADSUCL, NEXTAD, LMATRI);


    return 0;
}